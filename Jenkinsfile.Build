pipeline {
    environment {
        //NAME = "${env.BRANCH_NAME == "master" ? "prod" : "dev"}"
        VERSION = "${BUILD_NUMBER}"
        DOMAIN = 'localhost'
        REGISTRY = 'hasanalperen/bcfm'
        REGISTRY_CREDENTIAL = 'dockerhub'
        APP = 'web-green'
        HELM_REPO = "http://35.230.132.88:9090"
        helmversion = "0.1"+"."+"${VERSION}"
    }
    agent { 
        kubernetes {
            yaml '''
            apiVersion: v1
            kind: Pod
            spec:
               containers:
               - name : docker
                 image : docker:latest
                 command:
                 - cat
                 tty : true
                 volumeMounts: 
                 - mountPath: /var/run/docker.sock
                   name: docker-sock
               - name: helm
                 image: dtzar/helm-kubectl
                 command: 
                 - cat
                 tty: true
               - name: google
                 image: google/cloud-sdk
                 command:
                 - cat
                 tty: true
                 volumeMounts: 
                 - mountPath: /root
                   name: console-root
                 - mountPath: /root/.kube
                   name: console-kube
               volumes: 
                 - name : docker-sock
                   hostPath: 
                      path: /var/run/docker.sock
                 - name: console-root
                   hostPath: 
                      path: /var/sa
                 - name: console-kube
                   hostPath: 
                      path: /var/sa/.kube
             '''
        }
    }
    stages {
        stage('Docker Build') {
            steps {
                container('docker') {
                    sh "docker build -t ${REGISTRY}:${VERSION} ."
                }
            }
        }
        stage('Docker Push') {
            steps {
                container('docker') {
                    withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
                        sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
                        sh "docker push ${REGISTRY}:${VERSION}"
                    }
                }
            }
        }
        stage('Helm Create') {
            steps {
                container('helm') {
                    sh '''#!/bin/bash
                        wget -c https://github.com/alperen-selcuk/bcfm/raw/master/web-1.tgz
                        tar -xvzf web-1.tgz
                        rm -f web-1.tgz
                        sed -i 's/web/web-green/g' web/Chart.yaml
                        helm package web/. --version=${helmversion}
                        curl -L --data-binary @${APP}-${helmversion}.tgz ${HELM_REPO}/api/charts
                        '''
                } 
            }
        }
        stage('Helm Deploy') {
            steps {
                container('helm') {
                    sh "helm repo add chartmuseum ${HELM_REPO}"
                    
                    sh "helm repo update"
                    
                    sh "helm upgrade my-web-app-green chartmuseum/${APP} --version=${helmversion} --set image.tag=${VERSION} --install"
                }
            }
        }
        stage('validate blue green') {
            steps {
                container('helm') {
                    sh '''#!/bin/bash
                    output=$(curl --write-out "%{http_code}\n" "http://bcfm.34.102.60.81.nip.io/bcfm" --output output.txt --silent)
                    
                    if [ ${output} == '200' ]; then echo 'uygulama düzgün'; else exit 1; fi
                    
                    '''
                }
            }
        }
        stage ('kubectl') { 
            steps { 
                container('google') { 
                    sh '''#!/bin/bash
                    
                    cd /root
                    
                    gcloud auth activate-service-account --key-file jenkins.json
                    
                    wget "https://raw.githubusercontent.com/alperen-selcuk/bcfm/blue-green/change-ingress.yaml"
                    
                    kubectl --kubeconfig .kube/config.txt apply -f change-ingress.yaml
                    '''
                }
            }
        }
    }
}
